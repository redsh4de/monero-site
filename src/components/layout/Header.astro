---
import NavItem from "../ui/header/NavItem.astro";
import LanguageDropdown from "../ui/header/LanguageDropdown.astro";
import MaskIcon from "../ui/MaskIcon.astro";
import { getLocale } from "astro-i18n-aut";
import { localizeHref } from "../../i18n/utils";

import hamburger from "../../assets/icons/mask/hamburger.avif?url";

import whatIsMonero from "@/assets/icons/color/light/what-is-monero.avif?url";
import acceptMonero from "@/assets/icons/color/light/accept-monero.avif?url";
import contribute from "@/assets/icons/color/light/contribute.avif?url";
import mining from "@/assets/icons/color/light/mining.avif?url";
import faq from "@/assets/icons/color/light/faq.avif?url";
import workgroups from "@/assets/icons/color/light/workgroups.avif?url";
import sponsorships from "@/assets/icons/color/light/sponsorships.avif?url";
import hangouts from "@/assets/icons/color/light/hangouts.avif?url";
import merchantsExchanges from "@/assets/icons/color/light/merchants-exchanges.avif?url";
import moneropedia from "@/assets/icons/color/light/moneropedia.avif?url";
import roadmap from "@/assets/icons/color/light/roadmap.avif?url";
import researchLab from "@/assets/icons/color/light/research-lab.avif?url";
import userGuides from "@/assets/icons/color/light/user-guides.avif?url";
import developerGuides from "@/assets/icons/color/light/developer-guides.avif?url";
import tools from "@/assets/icons/color/light/tools.avif?url";
import pressKit from "@/assets/icons/color/light/press-kit.avif?url";

import whatIsMoneroDark from "@/assets/icons/color/dark/what-is-monero.avif?url";
import acceptMoneroDark from "@/assets/icons/color/dark/accept-monero.avif?url";
import contributeDark from "@/assets/icons/color/dark/contribute.avif?url";
import miningDark from "@/assets/icons/color/dark/mining.avif?url";
import faqDark from "@/assets/icons/color/dark/faq.avif?url";
import workgroupsDark from "@/assets/icons/color/dark/workgroups.avif?url";
import sponsorshipsDark from "@/assets/icons/color/dark/sponsorships.avif?url";
import hangoutsDark from "@/assets/icons/color/dark/hangouts.avif?url";
import merchantsExchangesDark from "@/assets/icons/color/dark/merchants-exchanges.avif?url";
import moneropediaDark from "@/assets/icons/color/dark/moneropedia.avif?url";
import roadmapDark from "@/assets/icons/color/dark/roadmap.avif?url";
import researchLabDark from "@/assets/icons/color/dark/research-lab.avif?url";
import userGuidesDark from "@/assets/icons/color/dark/user-guides.avif?url";
import developerGuidesDark from "@/assets/icons/color/dark/developer-guides.avif?url";
import toolsDark from "@/assets/icons/color/dark/tools.avif?url";
import pressKitDark from "@/assets/icons/color/dark/press-kit.avif?url";

const { t } = Astro.props;
const locale = getLocale(Astro.url);

const leftNav = [
  {
    label: t("header.nav.getStarted", { ns: "common" }),
    dropdown: [
      {
        label: t("header.dropdowns.getStarted.whatIsMonero.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.getStarted.whatIsMonero.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/get-started/what-is-monero"),
        icon: whatIsMonero,
        iconDark: whatIsMoneroDark,
      },
      {
        label: t("header.dropdowns.getStarted.acceptMonero.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.getStarted.acceptMonero.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/get-started/accept-monero"),
        icon: acceptMonero,
        iconDark: acceptMoneroDark,
      },
      {
        label: t("header.dropdowns.getStarted.contribute.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.getStarted.contribute.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/get-started/contribute"),
        icon: contribute,
        iconDark: contributeDark,
      },
      {
        label: t("header.dropdowns.getStarted.mining.label", { ns: "common" }),
        desc: t("header.dropdowns.getStarted.mining.desc", { ns: "common" }),
        href: localizeHref(locale, "/get-started/mining"),
        icon: mining,
        iconDark: miningDark,
      },
      {
        label: t("header.dropdowns.getStarted.faq.label", { ns: "common" }),
        desc: t("header.dropdowns.getStarted.faq.desc", { ns: "common" }),
        href: localizeHref(locale, "/get-started/faq"),
        icon: faq,
        iconDark: faqDark,
      },
    ],
  },
  {
    label: t("header.nav.downloads", { ns: "common" }),
    href: localizeHref(locale, "/downloads"),
  },
  {
    label: t("header.nav.blog", { ns: "common" }),
    href: localizeHref(locale, "/blog"),
  },
  {
    label: t("header.nav.community", { ns: "common" }),
    dropdown: [
      {
        label: t("header.dropdowns.community.workgroups.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.community.workgroups.desc", { ns: "common" }),
        href: localizeHref(locale, "/community/workgroups"),
        icon: workgroups,
        iconDark: workgroupsDark,
      },
      {
        label: t("header.dropdowns.community.sponsorships.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.community.sponsorships.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/community/sponsorships"),
        icon: sponsorships,
        iconDark: sponsorshipsDark,
      },
      {
        label: t("header.dropdowns.community.hangouts.label", { ns: "common" }),
        desc: t("header.dropdowns.community.hangouts.desc", { ns: "common" }),
        href: localizeHref(locale, "/community/hangouts"),
        icon: hangouts,
        iconDark: hangoutsDark,
      },
      {
        label: t("header.dropdowns.community.merchants.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.community.merchants.desc", { ns: "common" }),
        href: localizeHref(locale, "/community/merchants"),
        icon: merchantsExchanges,
        iconDark: merchantsExchangesDark,
      },
    ],
  },
  {
    label: t("header.nav.resources", { ns: "common" }),
    dropdown: [
      {
        label: t("header.dropdowns.resources.knowledgeBase.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.resources.knowledgeBase.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/resources/knowledge-base"),
        icon: moneropedia,
        iconDark: moneropediaDark,
      },
      {
        label: t("header.dropdowns.resources.roadmap.label", { ns: "common" }),
        desc: t("header.dropdowns.resources.roadmap.desc", { ns: "common" }),
        href: localizeHref(locale, "/resources/roadmap"),
        icon: roadmap,
        iconDark: roadmapDark,
      },
      {
        label: t("header.dropdowns.resources.researchLab.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.resources.researchLab.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/resources/research-lab"),
        icon: researchLab,
        iconDark: researchLabDark,
      },
      {
        label: t("header.dropdowns.resources.userGuides.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.resources.userGuides.desc", { ns: "common" }),
        href: localizeHref(locale, "/resources/user-guides"),
        icon: userGuides,
        iconDark: userGuidesDark,
      },
      {
        label: t("header.dropdowns.resources.developerGuides.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.resources.developerGuides.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/resources/developer-guides"),
        icon: developerGuides,
        iconDark: developerGuidesDark,
      },
      {
        label: t("header.dropdowns.resources.moneroTools.label", {
          ns: "common",
        }),
        desc: t("header.dropdowns.resources.moneroTools.desc", {
          ns: "common",
        }),
        href: localizeHref(locale, "/resources/monero-tools"),
        icon: tools,
        iconDark: toolsDark,
      },
      {
        label: t("header.dropdowns.resources.pressKit.label", { ns: "common" }),
        desc: t("header.dropdowns.resources.pressKit.desc", { ns: "common" }),
        href: localizeHref(locale, "/resources/press-kit"),
        icon: pressKit,
        iconDark: pressKitDark,
      },
    ],
  },
  {
    label: t("header.nav.crowdfunding", { ns: "common" }),
    href: "https://ccs.getmonero.org",
  },
];
---

<header class="header">
  <div class="bar">
    <a class="brand" href={localizeHref(locale, "/")}>
      <img
        class="mark"
        src="/meta/favicon-32x32.png"
        alt=""
        aria-hidden="true"
      />
      <span class="word">MONERO</span>
    </a>

    <input
      id="nav-toggle"
      class="nav-toggle"
      type="checkbox"
      aria-label="Open menu"
    />

    <nav id="primary-nav" class="nav" aria-label="Primary">
      <ul class="list">
        {leftNav.map((item) => <NavItem {...item} />)}
      </ul>
    </nav>

    <label for="nav-toggle" class="scrim" aria-hidden="true"></label>

    <div class="utils" aria-label="Utilities">
      <div class="lang">
        <LanguageDropdown />
      </div>
      <label
        for="nav-toggle"
        class="hamburger"
        aria-controls="primary-nav"
        aria-hidden="true"
      >
        <MaskIcon src={hamburger} size="1.25rem" />
      </label>
    </div>
  </div>
</header>

<style>
  .bar {
    display: grid;
    grid-template-columns: 1fr auto 1fr; /* brand | centered nav | utils */
    align-items: center;
    gap: 0.75rem;
    padding: 1rem clamp(1rem, 4vw, 4rem);
  }
  .header {
    position: relative;
    z-index: 10;
  }

  /* ===== Brand (left side) ===== */
  .brand {
    grid-column: 1;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--paragraph-main);
    text-decoration: none;
    font-weight: var(--font-weight-bold);
    letter-spacing: 0.02em;
  }
  .mark {
    display: grid;
    place-items: center;
    width: 1.625rem;
    height: 1.625rem;
    border-radius: 50%;
    background: var(--monero-orange);
    color: #fff;
    font-size: 0.875rem;
    font-weight: 900;
  }

  /* ===== Centered nav ===== */
  .nav {
    grid-column: 2;
    margin-left: 0;
    justify-self: center;
  }
  .list {
    display: flex;
    gap: 2rem;
    list-style: none;
    margin: 0;
    padding: 0;
    align-items: center;
    justify-content: center;
  }

  /* ===== Utils (right side) ===== */
  .utils {
    grid-column: 3;
    justify-self: end;
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
  }
  .lang {
    color: var(--paragraph-main);
    display: inline-flex;
    align-items: center;
  }
  .hamburger {
    color: var(--paragraph-main);
    display: none;
    cursor: pointer;
    font-size: 1.25rem;
  }

  .nav-toggle {
    display: none;
  }
  .scrim {
    display: none;
  }

  /* ===== Mobile (<=900px) ===== */
  @media (max-width: 900px) {
    :root {
      --drawer-gap: clamp(2.5rem, 10vw, 4.5rem);
    }

    .hamburger {
      display: inline-block;
    } /* show burger in utils */
    .header {
      position: sticky;
      top: 0;
      z-index: 10;
      background-color: inherit;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    /* Drawer */
    .nav {
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: auto;
      width: min(26.25rem, calc(100vw - var(--drawer-gap)));
      transform: translateX(100%);
      transition: transform 0.25s ease;
      background: var(--card-color);
      backdrop-filter: saturate(140%) blur(10px);
      -webkit-backdrop-filter: saturate(140%) blur(10px);
      box-sizing: border-box;
      padding: 1rem calc(1rem + env(safe-area-inset-right)) 2rem 1rem;
      z-index: 1001;
      overscroll-behavior: contain;
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
    }

    body:has(#nav-toggle:checked) {
      overflow: hidden;
      overscroll-behavior: none;
    }

    .list {
      flex-direction: column;
      align-items: stretch;
      gap: 0.25rem;
      margin-top: 2rem;
      justify-content: flex-start;
    }

    /* Scrim (under drawer) */
    .scrim {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, 0.45);
      display: block;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.2s ease;
      z-index: 1000;
      touch-action: none;
    }

    /* Open state */
    .nav-toggle:checked ~ .nav {
      transform: translateX(0);
    }
    .nav-toggle:checked ~ .scrim {
      opacity: 1;
      pointer-events: auto;
    }
  }

  /* Dynamic viewport height when supported */
  @supports (height: 100dvh) {
    @media (max-width: 900px) {
      .nav {
        height: 100dvh;
      }
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .nav,
    .scrim {
      transition: none;
    }
  }
</style>
