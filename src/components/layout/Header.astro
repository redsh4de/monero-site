---
import NavItem from "../ui/header/NavItem.astro";
import LanguageDropdown from "../ui/header/LanguageDropdown.astro";
import placeholder from '../../assets/placeholder.avif?url';
import MoneroLogo from "@/../public/meta/favicon-32x32.png?url"
import { getLocale } from 'astro-i18n-aut';
import { localizeHref } from '../../i18n/utils';

const { t } = Astro.props;
const locale = getLocale(Astro.url);

const leftNav = [
  {
    label: t('header.nav.getStarted', { ns: 'common' }),
    dropdown: [
      {
        label: t('header.dropdowns.getStarted.whatIsMonero.label', { ns: 'common' }),
        desc: t('header.dropdowns.getStarted.whatIsMonero.desc', { ns: 'common' }),
        href: localizeHref(locale, "/get-started/what-is-monero"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.getStarted.acceptMonero.label', { ns: 'common' }),
        desc: t('header.dropdowns.getStarted.acceptMonero.desc', { ns: 'common' }),
        href: localizeHref(locale, "/get-started/accept-monero"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.getStarted.contribute.label', { ns: 'common' }),
        desc: t('header.dropdowns.getStarted.contribute.desc', { ns: 'common' }),
        href: localizeHref(locale, "/get-started/contribute"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.getStarted.mining.label', { ns: 'common' }),
        desc: t('header.dropdowns.getStarted.mining.desc', { ns: 'common' }),
        href: localizeHref(locale, "/get-started/mining"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.getStarted.faq.label', { ns: 'common' }),
        desc: t('header.dropdowns.getStarted.faq.desc', { ns: 'common' }),
        href: localizeHref(locale, "/get-started/faq"),
        image: placeholder,
      },
    ],
  },
  { label: t('header.nav.downloads', { ns: 'common' }), href: localizeHref(locale, "/downloads") },
  { label: t('header.nav.blog', { ns: 'common' }), href: localizeHref(locale, "/blog") },
  {
    label: t('header.nav.community', { ns: 'common' }),
    dropdown: [
      {
        label: t('header.dropdowns.community.workgroups.label', { ns: 'common' }),
        desc: t('header.dropdowns.community.workgroups.desc', { ns: 'common' }),
        href: localizeHref(locale, "/community/workgroups"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.community.sponsorships.label', { ns: 'common' }),
        desc: t('header.dropdowns.community.sponsorships.desc', { ns: 'common' }),
        href: localizeHref(locale, "/community/sponsorships"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.community.hangouts.label', { ns: 'common' }),
        desc: t('header.dropdowns.community.hangouts.desc', { ns: 'common' }),
        href: localizeHref(locale, "/community/hangouts"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.community.merchants.label', { ns: 'common' }),
        desc: t('header.dropdowns.community.merchants.desc', { ns: 'common' }),
        href: localizeHref(locale, "/community/merchants"),
        image: placeholder,
      },
    ],
  },
  {
    label: t('header.nav.resources', { ns: 'common' }),
    dropdown: [
      {
        label: t('header.dropdowns.resources.knowledgeBase.label', { ns: 'common' }),
        desc: t('header.dropdowns.resources.knowledgeBase.desc', { ns: 'common' }),
        href: localizeHref(locale, "/resources/knowledge-base"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.resources.roadmap.label', { ns: 'common' }),
        desc: t('header.dropdowns.resources.roadmap.desc', { ns: 'common' }),
        href: localizeHref(locale, "/resources/roadmap"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.resources.researchLab.label', { ns: 'common' }),
        desc: t('header.dropdowns.resources.researchLab.desc', { ns: 'common' }),
        href: localizeHref(locale, "/resources/research-lab"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.resources.userGuides.label', { ns: 'common' }),
        desc: t('header.dropdowns.resources.userGuides.desc', { ns: 'common' }),
        href: localizeHref(locale, "/resources/user-guides"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.resources.developerGuides.label', { ns: 'common' }),
        desc: t('header.dropdowns.resources.developerGuides.desc', { ns: 'common' }),
        href: localizeHref(locale, "/resources/developer-guides"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.resources.moneroTools.label', { ns: 'common' }),
        desc: t('header.dropdowns.resources.moneroTools.desc', { ns: 'common' }),
        href: localizeHref(locale, "/resources/monero-tools"),
        image: placeholder,
      },
      {
        label: t('header.dropdowns.resources.pressKit.label', { ns: 'common' }),
        desc: t('header.dropdowns.resources.pressKit.desc', { ns: 'common' }),
        href: localizeHref(locale, "/resources/press-kit"),
        image: placeholder,
      },
    ],
  },
  { label: t('header.nav.crowdfunding', { ns: 'common' }), href: "https://ccs.getmonero.org" },
];
---

<header class="header">
  <div class="bar">
    <a class="brand" href={localizeHref(locale, "/")}>
      <img class="mark" src="/meta/favicon-32x32.png" alt="" aria-hidden="true" />
      <span class="word">MONERO</span>
    </a>

    <input
      id="nav-toggle"
      class="nav-toggle"
      type="checkbox"
      aria-label="Open menu"
    />
    <label
      for="nav-toggle"
      class="hamburger"
      aria-hidden="true"
      aria-controls="primary-nav">â˜°</label
    >

    <nav id="primary-nav" class="nav" aria-label="Primary">
      <ul class="list">
        {leftNav.map((item) => <NavItem {...item} />)}
      </ul>
    </nav>

    <label for="nav-toggle" class="scrim" aria-hidden="true"></label>
    <div class="lang">
      <LanguageDropdown />
    </div>
    
  </div>
</header>

<style>
  /* ===== Tokens ===== */
  :root {
    --fg: #0b0b0f;
    --muted: #7a7a86;
    --on-dark: #cfcfd7;
    --panel: var(--card-color);
  }
  @media (prefers-color-scheme: dark) {
    :root {
      --fg: #e6e6eb;
      --muted: #a9a9b4;
      --on-dark: #e2e2ea;
    }
  }

  /* ===== Header bar ===== */
  .bar {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem clamp(1rem, 4vw, 4rem);
  }
  .header {
    position: relative;
    z-index: 10;
  }
  .brand {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--on-dark);
    text-decoration: none;
    font-weight: var(--font-weight-bold);
    letter-spacing: 0.02em;
  }
  .mark {
    display: grid;
    place-items: center;
    width: 1.625rem;
    height: 1.625rem;
    border-radius: 50%;
    background: var(--monero-orange);
    color: #fff;
    font-size: 0.875rem;
    font-weight: 900;
  }

  /* ===== Desktop nav ===== */
  .nav {
    margin-left: 0.5rem;
  }
  .list {
    display: flex;
    gap: 1.25rem;
    list-style: none;
    margin: 0;
    padding: 0;
    align-items: center;
  }

  /* ===== Right utilities ===== */
  .lang {
    margin-left: auto;
    color: var(--muted);
    display: inline-flex;
    align-items: center;
    text-decoration: none;
  }

  .nav-toggle {
    display: none;
  }
  .hamburger {
    display: none;
    margin-left: auto;
    cursor: pointer;
    font-size: 1.25rem;
    color: var(--on-dark);
  }

  .scrim {
    display: none;
  }

  /* ===== Mobile (<=900px) ===== */
  @media (max-width: 900px) {
    /* leave a tappable gap to close the drawer */
    :root {
      --drawer-gap: clamp(2.5rem, 10vw, 4.5rem);
    }

    .hamburger {
      display: inline-block;
    }
    .header {
      position: sticky;
      top: 0;
      z-index: 10;
      background-color: inherit;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    /* Drawer */
    .nav {
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: auto;
      width: min(26.25rem, calc(100vw - var(--drawer-gap)));
      transform: translateX(100%);
      transition: transform 0.25s ease;

      background: var(--panel);
      backdrop-filter: saturate(140%) blur(10px);
      -webkit-backdrop-filter: saturate(140%) blur(10px);

      box-sizing: border-box;
      padding: 1rem calc(1rem + env(safe-area-inset-right)) 2rem 1rem;

      z-index: 1001;
      overscroll-behavior: contain;
      overflow-y: auto;
      -webkit-overflow-scrolling: touch; /* smoother on iOS */
    }

    /* Prevent background from scrolling while the drawer is open */
    body:has(#nav-toggle:checked) {
      overflow: hidden;
      overscroll-behavior: none;
    }

    .list {
      flex-direction: column;
      align-items: stretch;
      gap: 0.25rem;
      margin-top: 2rem;
    }
    .lang {
      order: 3;
      margin-left: 0;
    }

    /* Scrim (under drawer) */
    .scrim {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, 0.45);
      display: block;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.2s ease;
      z-index: 1000;
      touch-action: none;
    }

    /* Open state */
    .nav-toggle:checked ~ .nav {
      transform: translateX(0);
    }
    .nav-toggle:checked ~ .scrim {
      opacity: 1;
      pointer-events: auto;
    }
  }

  /* Dynamic viewport height when supported */
  @supports (height: 100dvh) {
    @media (max-width: 900px) {
      .nav {
        height: 100dvh;
      }
    }
  }

  /* Motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .nav,
    .scrim {
      transition: none;
    }
  }
</style>
